// Step 1: Define the strategy interface
interface PaymentStrategy {
    void processPayment(double amount);
}

// Step 2: Implement multiple strategies
class PayPalPayment implements PaymentStrategy {
    public void processPayment(double amount) {
        System.out.println("Processing PayPal payment of $" + amount);
    }
}

class CardPayment implements PaymentStrategy {
    public void processPayment(double amount) {
        System.out.println("Processing card payment of $" + amount);
    }
}

class CashPayment implements PaymentStrategy {
    public void processPayment(double amount) {
        System.out.println("Accepting cash payment of $" + amount);
    }
}

// Step 3: Context class uses a strategy
class Payment {
    private PaymentStrategy strategy;

    public Payment(PaymentStrategy strategy) {
        this.strategy = strategy;
    }

    public void makePayment(double amount) {
        strategy.processPayment(amount); // DELEGATION happens here
    }
}
